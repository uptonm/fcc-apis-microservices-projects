{"version":3,"sources":["components/Timestamp.js","components/HeaderParser.js","components/UrlShortener.js","components/ExerciseTracker.js","components/Navbar.js","components/Landing.js","components/FileMetadata.js","components/App.js","serviceWorker.js","index.js"],"names":["Timestamp","react_default","a","createElement","className","style","height","href","Component","HeaderParser","UrlShortener","state","url","shortenedUrl","error","errorMessage","handleChange","e","_this","setState","target","value","handleSubmit","_callee","regenerator_default","wrap","_context","prev","next","preventDefault","axios","post","catch","err","response","message","sent","data","code","stop","onSubmit","this","bind","htmlFor","type","id","onChange","length","concat","ExerciseTracker","username","userId","description","duration","date","content","handlePostUser","event","Object","objectSpread","Error","status","title","handlePostExercise","_callee2","exercise","_context2","user","handleGetUser","_callee3","_context3","get","defineProperty","renderContent","marginTop","onClick","_id","required","width","marginRight","marginLeft","Navbar","marginBottom","NavLink","to","activeClassName","Landing","FileMetadata","label","margin","action","method","encType","name","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b935cfa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Timestamp extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\" style={{ height: '100vh' }}>\r\n        <h1 className=\"display-4 text-center\">API Project: Timestamp Microservice</h1>\r\n        <hr />\r\n        <h2>User Stories (WIP):</h2>\r\n        <ol>\r\n          <li>The API endpoint is GET [project_url]/api/timestamp/:date_string?</li>\r\n          <li>\r\n            A date string is valid if can be successfully parsed by new Date(date_string). Note that\r\n            the unix timestamp needs to be an integer (not a string) specifying milliseconds. In our\r\n            test we will use date strings compliant with ISO-8601 (e.g. \"2016-11-20\") because this\r\n            will ensure an UTC timestamp.\r\n          </li>\r\n          <li>\r\n            If the date string is empty it should be equivalent to trigger new Date(), i.e. the\r\n            service uses the current timestamp.\r\n          </li>\r\n          <li>\r\n            If the date string is valid the api returns a JSON having the structure\r\n            <br />\r\n            <code>{`{\"unix\": <date.getTime()>, \"utc\" : <date.toUTCString()> }`}</code>\r\n            <br />\r\n            e.g. <code>{`{\"unix\": 1479663089000 ,\"utc\": \"Sun, 20 Nov 2016 17:31:29 GMT\"}`}</code>\r\n          </li>\r\n          <li>\r\n            If the date string is invalid the api returns a JSON having the structure\r\n            <br />\r\n            <code>{`{\"error\" : \"Invalid Date\" }`}</code>\r\n          </li>\r\n        </ol>\r\n        <div className=\"container text-center\">\r\n          <h3>Example Usage:</h3>\r\n          <a href=\"/api/timestamp/2015-12-25\">\r\n            <code>[project url]/api/timestamp/2015-12-25</code>\r\n          </a>\r\n          <br />\r\n          <a href=\"/api/timestamp/1450137600\">\r\n            <code>[project url]/api/timestamp/1450137600</code>\r\n          </a>\r\n          <br />\r\n          <br />\r\n          <h3>Example Output:</h3>\r\n          <code>{`{\"unix\": 1451001600000, \"utc\":\"Fri, 25 Dec 2015 00:00:00 GMT\"}`}</code>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timestamp;\r\n","import React, { Component } from 'react';\r\n\r\nclass HeaderParser extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4 text-center\">API Project: Request Header Parser Microservice</h1>\r\n        <hr />\r\n        <h2>User Story:</h2>\r\n        <ol>\r\n          <li>The API endpoint is GET [project_url]/api/timestamp/:date_string?</li>\r\n          <li>\r\n            I can get the IP address, preferred languages (from header <code>Accept-Language</code>)\r\n            and system infos (from header <code>User-Agent</code>) for my device.\r\n          </li>\r\n        </ol>\r\n        <div className=\"container text-center\">\r\n          <h3>Example Usage:</h3>\r\n          <a href=\"/api/whoami\">\r\n            <code>[project url]/api/whoami</code>\r\n          </a>\r\n          <br />\r\n          <br />\r\n          <h3>Example Output:</h3>\r\n          <code>{`{\"ipaddress\":\"159.20.14.100\",\"language\":\"en-US,en;q=0.5\",\r\n\"software\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0\"}`}</code>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderParser;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass UrlShortener extends Component {\r\n  state = {\r\n    url: '',\r\n    shortenedUrl: '',\r\n    error: false,\r\n    errorMessage: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ url: e.target.value });\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const url = await axios.post('/api/url', { url: this.state.url }).catch(err => {\r\n      this.setState({\r\n        shortenedUrl: '',\r\n        error: true,\r\n        errorMessage: err.response.message\r\n      });\r\n    });\r\n    if (url) {\r\n      this.setState({ shortenedUrl: url.data.code, error: false, errorMessage: '' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4 text-center\">API Project: URL Shortener Microservice</h1>\r\n        <hr />\r\n        <h2>User Story:</h2>\r\n        <ol>\r\n          <li>\r\n            I can POST a URL to <code>[project_url]/api/shorturl/new</code> and I will receive a\r\n            shortened URL in the JSON response.\r\n            <br />\r\n            Example :<code>{`\\t{\"original_url\": \"www.google.com\",\"short_url\":1}`}</code>\r\n          </li>\r\n          <li>\r\n            If I pass an invalid URL that doesn't follow the{' '}\r\n            <code>http(s)://www.example.com(/more/routes)</code>\r\n            format, the JSON response will contain an error like{' '}\r\n            <code>{`{\"error\":\"invalid URL\"}`}</code>\r\n            <br />\r\n            HINT: to be sure that the submitted url points to a valid site you can use the function\r\n            dns.lookup(host, cb) from the dns core module.\r\n          </li>\r\n          <li>When I visit the shortened URL, it will redirect me to my original link.</li>\r\n        </ol>\r\n        <div className=\"container text-center\">\r\n          <h3>Short URL Creation:</h3>\r\n          <span>\r\n            example: <code>POST [project_url]/api/url</code> - <code>https://google.com</code>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <form className=\"bd-example\" onSubmit={this.handleSubmit.bind(this)}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"url\">Url to Shorten: </label>\r\n              <input\r\n                className={!this.state.error ? 'form-control' : 'form-control is-invalid'}\r\n                type=\"text\"\r\n                id=\"url\"\r\n                value={this.state.url}\r\n                onChange={this.handleChange.bind(this)}\r\n              />\r\n              {!this.state.error ? (\r\n                ''\r\n              ) : (\r\n                <div className=\"invalid-feedback\">Please provide a valid url.</div>\r\n              )}\r\n            </div>\r\n            {this.state.shortenedUrl.length > 0 ? (\r\n              <h3>\r\n                <a href={`api/url/${this.state.shortenedUrl}`}>{`[project_url]/api/url${\r\n                  this.state.shortenedUrl\r\n                }`}</a>\r\n              </h3>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <button className=\"btn btn-lg btn-primary\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n          <br />\r\n          <h3>Example Usage:</h3>\r\n          <a href=\"/api/url/9a31e9\">\r\n            <code>[this_project_url]/api/url/9a31e9</code>\r\n          </a>\r\n          <br />\r\n          <br />\r\n          <h3>Will Redirect To:</h3>\r\n          <code>https://google.com</code>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UrlShortener;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass ExerciseTracker extends Component {\r\n  state = {\r\n    username: {\r\n      value: \"\",\r\n      error: \"\"\r\n    },\r\n    userId: {\r\n      value: \"\",\r\n      error: \"\"\r\n    },\r\n    description: {\r\n      value: \"\",\r\n      error: \"\"\r\n    },\r\n    duration: {\r\n      value: \"\",\r\n      error: \"\"\r\n    },\r\n    date: {\r\n      value: \"\",\r\n      error: \"\"\r\n    },\r\n    content: {}\r\n  };\r\n\r\n  handlePostUser = async event => {\r\n    event.preventDefault();\r\n    const username = await axios\r\n      .post(\"/api/exercise/users\", { username: this.state.username.value })\r\n      .catch(err => {\r\n        this.setState({\r\n          username: {\r\n            ...this.state.username,\r\n            error: err.response.data.Error\r\n          },\r\n          content: {\r\n            status: false\r\n          }\r\n        });\r\n      });\r\n    if (username) {\r\n      this.setState({\r\n        username: { ...this.state.username, error: \"\" },\r\n        content: { title: \"User Added: \", status: \"user\", ...username.data }\r\n      });\r\n    }\r\n  };\r\n\r\n  handlePostExercise = async event => {\r\n    event.preventDefault();\r\n    let exercise;\r\n    if (this.state.date.value.length === 0) {\r\n      exercise = {\r\n        user: this.state.userId.value,\r\n        description: this.state.description.value,\r\n        duration: this.state.duration.value\r\n      };\r\n    } else {\r\n      exercise = {\r\n        user: this.state.userId.value,\r\n        description: this.state.description.value,\r\n        duration: this.state.duration.value,\r\n        date: this.state.date\r\n      };\r\n    }\r\n    await axios.post(\"/api/exercise\", exercise).catch(err => {\r\n      this.setState({\r\n        date: {\r\n          ...this.state.date,\r\n          error: err.response.data.Error\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  handleGetUser = async event => {\r\n    event.preventDefault();\r\n    const user = await axios\r\n      .get(`/api/exercise/users?username=${this.state.username.value}`)\r\n      .catch(err => {\r\n        this.setState({\r\n          username: {\r\n            ...this.state.username,\r\n            error: err.response.data.Error\r\n          },\r\n          content: {\r\n            status: false\r\n          }\r\n        });\r\n      });\r\n    if (user) {\r\n      this.setState({\r\n        username: {\r\n          ...this.state.username,\r\n          error: \"\"\r\n        },\r\n        content: {\r\n          status: \"user\",\r\n          title: \"User: \",\r\n          ...user.data\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    // console.log(event.target.id );\r\n    this.setState({\r\n      [`${event.target.id}`]: {\r\n        ...this.state[`${event.target.id}`],\r\n        value: event.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  renderContent = () => {\r\n    switch (this.state.content.status) {\r\n      case \"user\":\r\n        return (\r\n          <div className=\"bd-example\" style={{ marginTop: \"2.2em\" }}>\r\n            <i\r\n              className=\"fas fa-times float-top-right\"\r\n              onClick={() => this.setState({ content: {} })}\r\n            />\r\n            <h3>{this.state.content.title}</h3>\r\n            <code>_id: </code>\r\n            {this.state.content._id}\r\n            <br />\r\n            <code>username: </code>\r\n            {this.state.content.username}\r\n          </div>\r\n        );\r\n      case \"exercise\":\r\n      default:\r\n        return (\r\n          <div className=\"bd-example\" style={{ marginTop: \"2.2em\" }}>\r\n            <p>GET user's exercise log:</p>\r\n            <code>GET /api/exercise/log?{`{userId}`}[&from][&to][&limit]</code>\r\n            <br />\r\n            <br />\r\n            <p>\r\n              <strong>{`{}`}</strong> = required, <strong>[ ]</strong> =\r\n              optional\r\n            </p>\r\n            <p>\r\n              <strong>from, to</strong> = dates (yyyy-mm-dd);{\" \"}\r\n              <strong>limit</strong> = number\r\n            </p>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4 text-center\">API Project: Exercise Tracker</h1>\r\n        <hr />\r\n        <div className=\"row\" style={{ marginTop: \"1em\" }}>\r\n          <div className=\"col-sm-6\">\r\n            <form\r\n              onSubmit={this.handlePostUser.bind(this)}\r\n              className=\"bd-example\"\r\n            >\r\n              <h3>Create a User:</h3>\r\n              <code>POST [project_url]/api/exercise/users</code>\r\n              <div className=\"form-group\" style={{ marginTop: \"1em\" }}>\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  className={\r\n                    this.state.username.error.length === 0\r\n                      ? \"form-control\"\r\n                      : \"form-control is-invalid\"\r\n                  }\r\n                  required\r\n                  id=\"username\"\r\n                  value={this.state.username.value}\r\n                  onChange={this.handleChange.bind(this)}\r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                  {this.state.username.error}\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                style={{ width: \"45%\", marginRight: \"5%\" }}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </button>\r\n              <button\r\n                className=\"btn btn-success\"\r\n                style={{ width: \"45%\", marginLeft: \"5%\" }}\r\n                onClick={this.handleGetUser}\r\n              >\r\n                Look Up\r\n              </button>\r\n            </form>\r\n            {this.renderContent()}\r\n          </div>\r\n          <div className=\"col-sm-6\">\r\n            <form\r\n              onSubmit={this.handlePostExercise.bind(this)}\r\n              className=\"bd-example\"\r\n            >\r\n              <h3>Add Exercises:</h3>\r\n              <code>POST [project_url]/api/exercise</code>\r\n              <div className=\"form-group\" style={{ marginTop: \"1em\" }}>\r\n                <label htmlFor=\"userId\">UserId</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  id=\"userId\"\r\n                  value={this.state.userId.value}\r\n                  onChange={this.handleChange.bind(this)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  id=\"description\"\r\n                  value={this.state.description.value}\r\n                  onChange={this.handleChange.bind(this)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"duration\">Duration (mins)</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  id=\"duration\"\r\n                  value={this.state.duration.value}\r\n                  onChange={this.handleChange.bind(this)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"date\">Date (yyyy-mm-dd)</label>\r\n                <input\r\n                  className={\r\n                    this.state.date.error.length > 0\r\n                      ? \"form-control is-invalid\"\r\n                      : \"form-control\"\r\n                  }\r\n                  id=\"date\"\r\n                  value={this.state.date.value}\r\n                  onChange={this.handleChange.bind(this)}\r\n                />\r\n                <div className=\"invalid-feedback\">{this.state.date.error}</div>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                style={{ width: \"100%\" }}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExerciseTracker;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-lg navbar-dark bg-dark\"\r\n      style={{ marginBottom: \"1em\" }}\r\n    >\r\n      <NavLink className=\"navbar-brand\" to=\"/\">\r\n        FCC-APIs-Microservices\r\n      </NavLink>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              activeClassName=\"active\"\r\n              to=\"/timestamp\"\r\n            >\r\n              Timestamp API\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link active\"\r\n              to=\"/headerparser\"\r\n            >\r\n              Header Parser API\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link active\"\r\n              to=\"/url\"\r\n            >\r\n              Url Shortener API\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link active\"\r\n              to=\"/exercise\"\r\n            >\r\n              Exercise Tracker API\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link active\"\r\n              to=\"/file\"\r\n            >\r\n              File Metadata API\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <div className=\"jumbotron\">\r\n        <h1 className=\"display-4\">\r\n          Introduction to the APIs and Microservices Projects\r\n        </h1>\r\n        <p className=\"lead\">\r\n          This is a simple hero unit, a simple jumbotron-style component for\r\n          calling extra attention to featured content or information.\r\n        </p>\r\n        <hr className=\"my-4\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass FileMetadata extends Component {\r\n  state = {\r\n    label: \"Choose file...\"\r\n  };\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    this.setState({ label: event.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4 text-center\">\r\n          API Project: File Metadata Microservice{\" \"}\r\n        </h1>\r\n        <hr />\r\n        <h4>User Stories: </h4>\r\n        <ol style={{ margin: \"0 auto\" }}>\r\n          <li>I can submit a form object that includes a file upload. </li>\r\n          <li>\r\n            The from file input field has the \"name\" attribute set to \"upfile\".\r\n            We rely on this in testing.{\" \"}\r\n          </li>\r\n          <li>\r\n            When I submit something, I will receive the file name, and size in\r\n            bytes within the JSON response.\r\n          </li>\r\n        </ol>\r\n        <br />\r\n        <h4 className=\"text-center\">Usage: Please Upload a File ...</h4>\r\n        <br />\r\n        <form\r\n          action=\"/api/file/upload\"\r\n          method=\"POST\"\r\n          encType=\"multipart/form-data\"\r\n          className=\"bd-example\"\r\n          style={{ margin: \"0 auto\", width: \"60%\" }}\r\n        >\r\n          <div className=\"custom-file\">\r\n            <input\r\n              id=\"file\"\r\n              type=\"file\"\r\n              name=\"file\"\r\n              className=\"custom-file-input\"\r\n              onChange={this.handleChange.bind(this)}\r\n            />\r\n            <label className=\"custom-file-label\" htmlFor=\"file\">\r\n              {this.state.label}\r\n            </label>\r\n          </div>\r\n\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            id=\"button\"\r\n            type=\"submit\"\r\n            style={{ marginTop: \"1em\" }}\r\n          >\r\n            Upload\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileMetadata;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport Timestamp from './Timestamp';\r\nimport HeaderParser from './HeaderParser';\r\nimport UrlShortener from './UrlShortener';\r\nimport ExerciseTracker from './ExerciseTracker';\r\nimport Navbar from './Navbar';\r\nimport Landing from './Landing';\r\nimport FileMetadata from './FileMetadata';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <div>\r\n            <Navbar />\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route path=\"/timestamp\" component={Timestamp} />\r\n            <Route path=\"/headerparser\" component={HeaderParser} />\r\n            <Route path=\"/url\" component={UrlShortener} />\r\n            <Route path=\"/exercise\" component={ExerciseTracker} />\r\n            <Route path=\"/file\" component={FileMetadata} />\r\n          </div>\r\n        </Router>\r\n        <footer className=\"footer\">\r\n          <span>\r\n            made with <i className=\"fas fa-heart\" /> for{' '}\r\n            <a href=\"https://freecodecamp.com\">freeCodeCamp</a>\r\n          </span>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}