{"version":3,"sources":["components/Timestamp.js","components/HeaderParser.js","components/UrlShortener.js","components/ExerciseTracker.js","components/Navbar.js","components/Landing.js","components/FileMetadata.js","components/App.js","serviceWorker.js","index.js"],"names":["Timestamp","react_default","a","createElement","className","style","height","href","concat","environment","Component","HeaderParser","UrlShortener","state","url","shortenedUrl","error","errorMessage","handleChange","e","_this","setState","target","value","handleSubmit","_callee","regenerator_default","wrap","_context","prev","next","preventDefault","axios","post","catch","err","response","message","sent","data","code","stop","onSubmit","this","bind","htmlFor","type","id","onChange","length","ExerciseTracker","username","userId","description","duration","date","content","handlePostUser","event","Object","objectSpread","Error","status","title","handlePostExercise","_callee2","exercise","_context2","user","handleGetUser","_callee3","exercises","_context3","get","console","log","parseContent","_id","map","defineProperty","renderContent","marginTop","onClick","JSONPretty_default","required","width","marginRight","marginLeft","Navbar","marginBottom","NavLink","to","activeClassName","Landing","FileMetadata","label","margin","action","method","encType","name","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8239ffdb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as environment from \"../assets/environment.json\";\n\nclass Timestamp extends Component {\n  render() {\n    return (\n      <div className=\"container\" style={{ height: \"100vh\" }}>\n        <h1 className=\"display-4 text-center\">\n          API Project: Timestamp Microservice\n        </h1>\n        <hr />\n        <h2>User Stories (WIP):</h2>\n        <ol>\n          <li>\n            The API endpoint is{\" \"}\n            <code>GET [project_url]/api/timestamp/:date_string?</code>\n          </li>\n          <li>\n            A date string is valid if can be successfully parsed by new\n            Date(date_string). Note that the unix timestamp needs to be an\n            integer (not a string) specifying milliseconds. In our test we will\n            use date strings compliant with ISO-8601 (e.g. \"2016-11-20\") because\n            this will ensure an UTC timestamp.\n          </li>\n          <li>\n            If the date string is empty it should be equivalent to trigger new\n            Date(), i.e. the service uses the current timestamp.\n          </li>\n          <li>\n            If the date string is valid the api returns a JSON having the\n            structure\n            <br />\n            <code>{`{\"unix\": <date.getTime()>, \"utc\" : <date.toUTCString()> }`}</code>\n            <br />\n            e.g.{\" \"}\n            <code>{`{\"unix\": 1479663089000 ,\"utc\": \"Sun, 20 Nov 2016 17:31:29 GMT\"}`}</code>\n          </li>\n          <li>\n            If the date string is invalid the api returns a JSON having the\n            structure\n            <br />\n            <code>{`{\"error\" : \"Invalid Date\" }`}</code>\n          </li>\n        </ol>\n        <div className=\"container text-center\">\n          <h3>Example Usage:</h3>\n          <a href={`${environment.PROJECT_URL}/api/timestamp/2015-12-25`}>\n            <code>[project url]/api/timestamp/2015-12-25</code>\n          </a>\n          <br />\n          <a href={`${environment.PROJECT_URL}/api/timestamp/1450137600`}>\n            <code>[project url]/api/timestamp/1450137600</code>\n          </a>\n          <br />\n          <br />\n          <h3>Example Output:</h3>\n          <code>{`{\"unix\": 1451001600000, \"utc\":\"Fri, 25 Dec 2015 00:00:00 GMT\"}`}</code>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timestamp;\n","import React, { Component } from \"react\";\nimport * as environment from \"../assets/environment.json\";\n\nclass HeaderParser extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"display-4 text-center\">\n          API Project: Request Header Parser Microservice\n        </h1>\n        <hr />\n        <h2>User Story:</h2>\n        <ol>\n          <li>\n            The API endpoint is GET [project_url]/api/timestamp/:date_string?\n          </li>\n          <li>\n            I can get the IP address, preferred languages (from header{\" \"}\n            <code>Accept-Language</code>) and system infos (from header{\" \"}\n            <code>User-Agent</code>) for my device.\n          </li>\n        </ol>\n        <div className=\"container text-center\">\n          <h3>Example Usage:</h3>\n          <a href={`${environment.PROJECT_URL}/api/whoami`}>\n            <code>[project url]/api/whoami</code>\n          </a>\n          <br />\n          <br />\n          <h3>Example Output:</h3>\n          <code>{`{\"ipaddress\":\"159.20.14.100\",\"language\":\"en-US,en;q=0.5\",\n\"software\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0\"}`}</code>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HeaderParser;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport * as environment from \"../assets/environment.json\";\n\nclass UrlShortener extends Component {\n  state = {\n    url: \"\",\n    shortenedUrl: \"\",\n    error: false,\n    errorMessage: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({ url: e.target.value });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const url = await axios\n      .post(\"/api/url\", { url: this.state.url })\n      .catch(err => {\n        this.setState({\n          shortenedUrl: \"\",\n          error: true,\n          errorMessage: err.response.message\n        });\n      });\n    if (url) {\n      this.setState({\n        shortenedUrl: url.data.code,\n        error: false,\n        errorMessage: \"\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"display-4 text-center\">\n          API Project: URL Shortener Microservice\n        </h1>\n        <hr />\n        <h2>User Story:</h2>\n        <ol>\n          <li>\n            I can POST a URL to <code>[project_url]/api/shorturl/new</code> and\n            I will receive a shortened URL in the JSON response.\n            <br />\n            Example :\n            <code>{`\\t{\"original_url\": \"www.google.com\",\"short_url\":1}`}</code>\n          </li>\n          <li>\n            If I pass an invalid URL that doesn't follow the{\" \"}\n            <code>http(s)://www.example.com(/more/routes)</code>\n            format, the JSON response will contain an error like{\" \"}\n            <code>{`{\"error\":\"invalid URL\"}`}</code>\n            <br />\n            HINT: to be sure that the submitted url points to a valid site you\n            can use the function dns.lookup(host, cb) from the dns core module.\n          </li>\n          <li>\n            When I visit the shortened URL, it will redirect me to my original\n            link.\n          </li>\n        </ol>\n        <div className=\"container text-center\">\n          <h3>Short URL Creation:</h3>\n          <span>\n            example: <code>POST [project_url]/api/url</code> -{\" \"}\n            <code>https://google.com</code>\n          </span>\n          <br />\n          <br />\n          <form className=\"bd-example\" onSubmit={this.handleSubmit.bind(this)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"url\">Url to Shorten: </label>\n              <input\n                className={\n                  !this.state.error ? \"form-control\" : \"form-control is-invalid\"\n                }\n                type=\"text\"\n                id=\"url\"\n                value={this.state.url}\n                onChange={this.handleChange.bind(this)}\n              />\n              {!this.state.error ? (\n                \"\"\n              ) : (\n                <div className=\"invalid-feedback\">\n                  Please provide a valid url.\n                </div>\n              )}\n            </div>\n            {this.state.shortenedUrl.length > 0 ? (\n              <h3>\n                <a\n                  href={`${environment.PROJECT_URL}/api/url/${this.state.shortenedUrl}`}\n                >{`[project_url]/api/url/${this.state.shortenedUrl}`}</a>\n              </h3>\n            ) : (\n              \"\"\n            )}\n            <button className=\"btn btn-lg btn-primary\" type=\"submit\">\n              Submit\n            </button>\n          </form>\n          <br />\n          <h3>Example Usage:</h3>\n          <a href={`${environment.PROJECT_URL}/api/url/9a31e9`}>\n            <code>[this_project_url]/api/url/9a31e9</code>\n          </a>\n          <br />\n          <br />\n          <h3>Will Redirect To:</h3>\n          <code>https://google.com</code>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UrlShortener;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport * as environment from \"../assets/environment.json\";\nimport JSONPretty from \"react-json-pretty\";\n\nclass ExerciseTracker extends Component {\n  state = {\n    username: {\n      value: \"\",\n      error: \"\"\n    },\n    userId: {\n      value: \"\",\n      error: \"\"\n    },\n    description: {\n      value: \"\",\n      error: \"\"\n    },\n    duration: {\n      value: \"\",\n      error: \"\"\n    },\n    date: {\n      value: \"\",\n      error: \"\"\n    },\n    content: {}\n  };\n\n  handlePostUser = async event => {\n    event.preventDefault();\n    const username = await axios\n      .post(\"/api/exercise/users\", { username: this.state.username.value })\n      .catch(err => {\n        this.setState({\n          username: {\n            ...this.state.username,\n            error: err.response.data.Error\n          },\n          content: {\n            status: false\n          }\n        });\n      });\n    if (username) {\n      this.setState({\n        username: { ...this.state.username, error: \"\" },\n        content: { title: \"User Added: \", status: \"user\", ...username.data }\n      });\n    }\n  };\n\n  handlePostExercise = async event => {\n    event.preventDefault();\n    let exercise;\n    if (this.state.date.value.length === 0) {\n      exercise = {\n        user: this.state.userId.value,\n        description: this.state.description.value,\n        duration: this.state.duration.value\n      };\n    } else {\n      exercise = {\n        user: this.state.userId.value,\n        description: this.state.description.value,\n        duration: this.state.duration.value,\n        date: this.state.date.value\n      };\n    }\n    await axios.post(\"/api/exercise\", exercise).catch(err => {\n      this.setState({\n        date: {\n          ...this.state.date.value,\n          error: err.response.data.Error\n        }\n      });\n    });\n  };\n\n  handleGetUser = async event => {\n    event.preventDefault();\n    const user = await axios\n      .get(`/api/exercise/users?username=${this.state.username.value}`)\n      .catch(err => {\n        this.setState({\n          username: {\n            ...this.state.username,\n            error: err.response.data.Error\n          },\n          content: {\n            status: false\n          }\n        });\n      });\n    if (user) {\n      const exercises = await axios\n        .get(`/api/exercise/log?username=${this.state.username.value}`)\n        .catch(err => {\n          this.setState({\n            username: {\n              ...this.state.username,\n              error: err.response.data.Error\n            },\n            content: {\n              status: false\n            }\n          });\n        });\n      this.setState(\n        {\n          username: {\n            ...this.state.username,\n            error: \"\"\n          },\n          content: {\n            status: \"user\",\n            title: \"User: \",\n            exercises: exercises.data,\n            ...user.data\n          }\n        },\n        () => console.log(this.state.content)\n      );\n    }\n  };\n\n  parseContent = content => {\n    return {\n      _id: content._id,\n      username: content.username,\n      exercises: content.exercises.map(exercise => ({\n        _id: exercise._id,\n        username: exercise.user.username,\n        description: exercise.description,\n        duration: exercise.duration,\n        date: exercise.date\n      }))\n    };\n  };\n\n  handleChange = event => {\n    // console.log(event.target.id );\n    this.setState({\n      [`${event.target.id}`]: {\n        ...this.state[`${event.target.id}`],\n        value: event.target.value\n      }\n    });\n  };\n\n  renderContent = () => {\n    switch (this.state.content.status) {\n      case \"user\":\n        return (\n          <div className=\"bd-example\" style={{ marginTop: \"2.2em\" }}>\n            <i\n              className=\"fas fa-times float-top-right\"\n              onClick={() => this.setState({ content: {} })}\n            />\n            <JSONPretty\n              id=\"data\"\n              data={this.parseContent(this.state.content)}\n            />\n          </div>\n        );\n      case \"exercise\":\n      default:\n        return (\n          <div className=\"bd-example\" style={{ marginTop: \"2.2em\" }}>\n            <p>GET user's exercise log:</p>\n            <code>\n              GET{\" \"}\n              <a\n                href={`${environment.PROJECT_URL}/api/exercise/log?username=${\n                  this.state.username.value\n                    ? this.state.username.value\n                    : \"username\"\n                }`}\n              >\n                /api/exercise/log?\n                {this.state.username.value\n                  ? `username=${this.state.username.value}`\n                  : \"{username}\"}\n                [&from][&to][&limit]\n              </a>\n            </code>\n            <br />\n            <br />\n            <p>\n              <strong>{`{}`}</strong> = required, <strong>[ ]</strong> =\n              optional\n            </p>\n            <p>\n              <strong>from, to</strong> = dates (yyyy-mm-dd);{\" \"}\n              <strong>limit</strong> = number\n            </p>\n          </div>\n        );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"display-4 text-center\">API Project: Exercise Tracker</h1>\n        <hr />\n        <div className=\"row\" style={{ marginTop: \"1em\" }}>\n          <div className=\"col-sm-6\">\n            <form\n              onSubmit={this.handlePostUser.bind(this)}\n              className=\"bd-example\"\n            >\n              <h3>Create a User:</h3>\n              <code>POST [project_url]/api/exercise/users</code>\n              <div className=\"form-group\" style={{ marginTop: \"1em\" }}>\n                <label htmlFor=\"username\">Username</label>\n                <input\n                  className={\n                    this.state.username.error.length === 0\n                      ? \"form-control\"\n                      : \"form-control is-invalid\"\n                  }\n                  required\n                  id=\"username\"\n                  value={this.state.username.value}\n                  onChange={this.handleChange.bind(this)}\n                />\n                <div className=\"invalid-feedback\">\n                  {this.state.username.error}\n                </div>\n              </div>\n              <button\n                className=\"btn btn-primary\"\n                style={{ width: \"45%\", marginRight: \"5%\" }}\n                type=\"submit\"\n              >\n                Submit\n              </button>\n              <button\n                className=\"btn btn-success\"\n                style={{ width: \"45%\", marginLeft: \"5%\" }}\n                onClick={this.handleGetUser}\n              >\n                Look Up\n              </button>\n            </form>\n            {this.renderContent()}\n          </div>\n          <div className=\"col-sm-6\">\n            <form\n              onSubmit={this.handlePostExercise.bind(this)}\n              className=\"bd-example\"\n            >\n              <h3>Add Exercises:</h3>\n              <code>POST [project_url]/api/exercise</code>\n              <div className=\"form-group\" style={{ marginTop: \"1em\" }}>\n                <label htmlFor=\"userId\">Username</label>\n                <input\n                  className=\"form-control\"\n                  required\n                  id=\"userId\"\n                  value={this.state.userId.value}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  className=\"form-control\"\n                  required\n                  id=\"description\"\n                  value={this.state.description.value}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"duration\">Duration (mins)</label>\n                <input\n                  className=\"form-control\"\n                  required\n                  id=\"duration\"\n                  value={this.state.duration.value}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"date\">Date (yyyy-mm-dd)</label>\n                <input\n                  className={\n                    this.state.date.error.length > 0\n                      ? \"form-control is-invalid\"\n                      : \"form-control\"\n                  }\n                  id=\"date\"\n                  value={this.state.date.value}\n                  onChange={this.handleChange.bind(this)}\n                />\n                <div className=\"invalid-feedback\">{this.state.date.error}</div>\n              </div>\n              <button\n                className=\"btn btn-primary\"\n                style={{ width: \"100%\" }}\n                type=\"submit\"\n              >\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExerciseTracker;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default () => {\n  return (\n    <nav\n      className=\"navbar navbar-expand-lg navbar-dark bg-dark\"\n      style={{ marginBottom: \"1em\" }}\n    >\n      <NavLink className=\"navbar-brand\" to=\"/\">\n        FCC-APIs-Microservices\n      </NavLink>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <NavLink\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              to=\"/timestamp\"\n            >\n              Timestamp API\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink\n              className=\"nav-link\"\n              activeClassName=\"nav-link active\"\n              to=\"/headerparser\"\n            >\n              Header Parser API\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink\n              className=\"nav-link\"\n              activeClassName=\"nav-link active\"\n              to=\"/url\"\n            >\n              Url Shortener API\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink\n              className=\"nav-link\"\n              activeClassName=\"nav-link active\"\n              to=\"/exercise\"\n            >\n              Exercise Tracker API\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink\n              className=\"nav-link\"\n              activeClassName=\"nav-link active\"\n              to=\"/file\"\n            >\n              File Metadata API\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <div className=\"jumbotron\">\n        <h1 className=\"display-4\">\n          Introduction to the APIs and Microservices Projects\n        </h1>\n        <p className=\"lead\">\n          This is a simple hero unit, a simple jumbotron-style component for\n          calling extra attention to featured content or information.\n        </p>\n        <hr className=\"my-4\" />\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nclass FileMetadata extends Component {\n  state = {\n    label: \"Choose file...\"\n  };\n  handleChange = event => {\n    event.preventDefault();\n    this.setState({ label: event.target.value });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"display-4 text-center\">\n          API Project: File Metadata Microservice{\" \"}\n        </h1>\n        <hr />\n        <h4>User Stories: </h4>\n        <ol style={{ margin: \"0 auto\" }}>\n          <li>I can submit a form object that includes a file upload. </li>\n          <li>\n            The from file input field has the \"name\" attribute set to \"upfile\".\n            We rely on this in testing.{\" \"}\n          </li>\n          <li>\n            When I submit something, I will receive the file name, and size in\n            bytes within the JSON response.\n          </li>\n        </ol>\n        <br />\n        <h4 className=\"text-center\">Usage: Please Upload a File ...</h4>\n        <br />\n        <form\n          action=\"/api/file/upload\"\n          method=\"POST\"\n          encType=\"multipart/form-data\"\n          className=\"bd-example\"\n          style={{ margin: \"0 auto\", width: \"60%\" }}\n        >\n          <div className=\"custom-file\">\n            <input\n              id=\"file\"\n              type=\"file\"\n              name=\"file\"\n              className=\"custom-file-input\"\n              onChange={this.handleChange.bind(this)}\n            />\n            <label className=\"custom-file-label\" htmlFor=\"file\">\n              {this.state.label}\n            </label>\n          </div>\n\n          <button\n            className=\"btn btn-primary\"\n            id=\"button\"\n            type=\"submit\"\n            style={{ marginTop: \"1em\" }}\n          >\n            Upload\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FileMetadata;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './index.css';\nimport Timestamp from './Timestamp';\nimport HeaderParser from './HeaderParser';\nimport UrlShortener from './UrlShortener';\nimport ExerciseTracker from './ExerciseTracker';\nimport Navbar from './Navbar';\nimport Landing from './Landing';\nimport FileMetadata from './FileMetadata';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route path=\"/timestamp\" component={Timestamp} />\n            <Route path=\"/headerparser\" component={HeaderParser} />\n            <Route path=\"/url\" component={UrlShortener} />\n            <Route path=\"/exercise\" component={ExerciseTracker} />\n            <Route path=\"/file\" component={FileMetadata} />\n          </div>\n        </Router>\n        <footer className=\"footer\">\n          <span>\n            made with <i className=\"fas fa-heart\" /> for{' '}\n            <a href=\"https://freecodecamp.com\">freeCodeCamp</a>\n          </span>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}